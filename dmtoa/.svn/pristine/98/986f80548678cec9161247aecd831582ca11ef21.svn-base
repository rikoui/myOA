package com.bjdreamtech.service.impl;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Service;

import com.bjdreamtech.dmt.bean.DMTDataTableBean;
import com.bjdreamtech.dmt.bean.DMTSessionBean;
import com.bjdreamtech.dmt.util.DMTDateUtil;
import com.bjdreamtech.dmt.util.DMTPrimaryKeyUtil;
import com.bjdreamtech.entity.TableDaily;
import com.bjdreamtech.entity.TableDailyExample;
import com.bjdreamtech.entity.TableNextplan;
import com.bjdreamtech.entity.TableNextplanExample;
import com.bjdreamtech.entity.TableWeekly;
import com.bjdreamtech.entity.TableWeeklyExample;
import com.bjdreamtech.entity.bean.WeeklyDetailsBean;
import com.bjdreamtech.format.DMTStatusFormatter;
import com.bjdreamtech.mapper.auto.TableDailyMapper;
import com.bjdreamtech.mapper.auto.TableNextplanMapper;
import com.bjdreamtech.mapper.auto.TableWeeklyMapper;
import com.bjdreamtech.mapper.custom.DailyManageMapper;
import com.bjdreamtech.mapper.custom.NextPlanManageMapper;
import com.bjdreamtech.mapper.custom.WeeklyManageMapper;
import com.bjdreamtech.service.IWeeklyService;
import com.bjdreamtech.util.DMTResultBean;

@Service("weeklyService")
public class WeeklyServiceImpl extends BaseServiceImpl implements IWeeklyService {
	@Resource
	private WeeklyManageMapper weeklyMapper;
	@Resource
	private DailyManageMapper dailyMapper;
	@Resource
	private NextPlanManageMapper nextPlanMapper;
	@Resource
	private TableWeeklyMapper tableWeeklyMapper;
	@Resource
	private TableDailyMapper tableDailyMapper;
	@Resource
	private TableNextplanMapper tableNextplanMapper;
	
	@Override
	public DMTResultBean getWeekly(HttpServletRequest request) throws Exception {
		DMTSessionBean admin = (DMTSessionBean) request.getSession().getAttribute("sessionBean");
		String rolename = admin.getRolename();
		String weeklyadmin = admin.getRealname();
		String weeklyadminid = admin.getAdminid();
		Calendar cal = Calendar.getInstance();
//		cal.add(Calendar.DAY_OF_MONTH, -1);  
		String time = DMTDateUtil.parseDate(cal.getTime()).substring(0, 8);
		// cal.set(cal.get(Calendar.YEAR), cal.get(Calendar.MONDAY),
		// cal.get(Calendar.DAY_OF_MONTH));
		String[] weeks = { "星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六" };
		int week_index = cal.get(Calendar.DAY_OF_WEEK) - 1;
		String timeStart = "";
		String timeEnd = "";
		if (weeks[week_index] == "星期日") {
			cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);
			cal.add(Calendar.DAY_OF_WEEK, -7);
			Date timestr = cal.getTime();
			timeStart = DMTDateUtil.parseDate(timestr).substring(0, 8);
			timeEnd = time;
		} else {
			cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);
			Date timestr = cal.getTime();
			timeStart = DMTDateUtil.parseDate(timestr).substring(0, 8);
			cal.setTime(timestr);
			cal.add(Calendar.DAY_OF_WEEK, 6);
			Date timeE = cal.getTime();
			timeEnd = DMTDateUtil.parseDate(timeE).substring(0, 8);
		}
		WeeklyDetailsBean weeklyBean = new WeeklyDetailsBean();
		weeklyBean.setRolename(rolename);
		weeklyBean.setWeeklyadmin(weeklyadmin);
		weeklyBean.setTimeStart(DMTDateUtil.packDateShort(timeStart));
		weeklyBean.setTimeEnd(DMTDateUtil.packDateShort(timeEnd));
		Map<String, Object> params = new HashMap<String, Object>();
		if (notNull(time)) {
			params.put("weeklystart", time);
		}
		if (notNull(weeklyadminid)) {
			params.put("weeklyadminid", weeklyadminid);
		}

		List<Map<String, Object>> weekly = weeklyMapper.WeeklyQuery(params);
		if (weekly == null || weekly.size() == 0) {
			return new DMTResultBean("0", "", weeklyBean);
		} else {
			String authadmin = (String) weekly.get(0).get("weekly_auth_admin");
			String lastdesc = (String) weekly.get(0).get("weekly_lastdesc");
			weeklyBean.setAuthAdmin(authadmin);
			weeklyBean.setLastDesc(lastdesc);
			String weeklyId = (String) weekly.get(0).get("weekly_id");
			System.out.println("==="+weeklyId);
			List<Map<String, Object>> daily = dailyMapper.dailyQueryList(weeklyId);
			// List<Map<String, Object>> dailyDetail = new ArrayList<Map<String,
			// Object>>();
			String[] dailyTime = new String[daily.size()];
			String[] dailyPart = new String[daily.size()];
			String[] dailyContent = new String[daily.size()];
			String[] dailyQuestion = new String[daily.size()];
			String[] dailyAnswer = new String[daily.size()];
			for (int i = 0; i < daily.size(); i++) {
				// Map<String, Object> map = new HashMap<String, Object>();
				String dailytime = (String) daily.get(i).get("daily_time");
				if (dailytime != null || dailytime != "") {
					dailyTime[i] = DMTDateUtil.packDateShort(dailytime) + " " + (String) daily.get(i).get("daily_week");
				}
				dailyPart[i] = (String) daily.get(i).get("daily_part");
				dailyContent[i] = (String) daily.get(i).get("daily_content");
				dailyQuestion[i] = (String) daily.get(i).get("daily_question");
				dailyAnswer[i] = (String) daily.get(i).get("daily_answer");
			}
			weeklyBean.setDailyTime(dailyTime);
			weeklyBean.setDailyPart(dailyPart);
			weeklyBean.setDailyContent(dailyContent);
			weeklyBean.setDailyQuestion(dailyQuestion);
			weeklyBean.setDailyAnswer(dailyAnswer);

			// weeklyBean.setDailyList(dailyDetail);
			List<Map<String, Object>> nextPlan = nextPlanMapper.nextPlanQueryList(weeklyId);
			int[] no = new int[nextPlan.size()];
			String[] nextplanThing = new String[nextPlan.size()];
			String[] nextplanOvertime = new String[nextPlan.size()];
			String[] nextplanLeading = new String[nextPlan.size()];
			String[] nextplanPart = new String[nextPlan.size()];
			for (int i = 0; i < nextPlan.size(); i++) {
				no[i] = i + 1;
				nextplanThing[i] = (String) nextPlan.get(i).get("nextplan_thing");
//				String nextTime = (String) nextPlan.get(i).get("nextplan_overtime");
//				if (nextTime != null || nextTime != "") {
//					nextplanOvertime[i] = DMTDateUtil.packDateShort(nextTime);
//				}
				nextplanOvertime[i] = (String) nextPlan.get(i).get("nextplan_overtime");
				nextplanLeading[i] = (String) nextPlan.get(i).get("nextplan_leading");
				nextplanPart[i] = (String) nextPlan.get(i).get("nextplan_parting");
			}
			weeklyBean.setNo(no);
			weeklyBean.setNextplanThing(nextplanThing);
			weeklyBean.setNextplanOvertime(nextplanOvertime);
			weeklyBean.setNextplanLeading(nextplanLeading);
			weeklyBean.setNextplanPart(nextplanPart);
			return new DMTResultBean("0", "", weeklyBean);
		}
	}

	@Override
	public DMTResultBean findWeeklyAdminSelect(HttpServletRequest request) {
		List<TableWeekly> weeklyAdminList = weeklyMapper.queryWeeklyAdminSelect();
		return new DMTResultBean("0", "", weeklyAdminList);
	}

	@Override
	public DMTDataTableBean<Map<String, Object>> queryWeeklyByPage(HttpServletRequest request) {
		// 初始化分页参数
		initPageParameter(request);
		DMTSessionBean admin = (DMTSessionBean) request.getSession().getAttribute("sessionBean");
		String realname = admin.getRealname();
		String weeklyadmin = request.getParameter("weeklyadmin");
		String weeklytime = request.getParameter("weeklytime");
		String weeklystatus = request.getParameter("weeklystatus");
		if (notNull(realname)) {
			params.put("realname", realname);
		}
		if (notNull(weeklyadmin)) {
			params.put("weeklyadmin", weeklyadmin);
		}
		if (notNull(weeklytime)) {
			weeklytime = weeklytime.replace("-", "");
			params.put("weeklytime", weeklytime);
		}
		if (notNull(weeklystatus)) {
			params.put("weeklystatus", weeklystatus);
		}
		List<Map<String, Object>> weeklyList = weeklyMapper.queryWeeklyListByPage(params);
		DMTStatusFormatter.formatStatusList(weeklyList, "weeklystatus", "weeklystatuscopy", "WEEKLY_AUTH_STATUS",
				paramManageMapper);
		List<Map<String, Object>> weeklylist = new ArrayList<Map<String, Object>>();
		for (int i = 0; i < weeklyList.size(); i++) {
			Map<String, Object> map = new HashMap<String, Object>();
			map.put("staffno", weeklyList.get(i).get("staffno"));
			map.put("weeklyadmin", weeklyList.get(i).get("weeklyadmin"));
			map.put("authadmin", weeklyList.get(i).get("authadmin"));
			map.put("weeklystart", DMTDateUtil.packDateShort((String) weeklyList.get(i).get("weeklystart")));
			map.put("weeklyend", DMTDateUtil.packDateShort((String) weeklyList.get(i).get("weeklyend")));
			map.put("weeklystatus", weeklyList.get(i).get("weeklystatuscopy"));
			weeklylist.add(map);
		}

		return new DMTDataTableBean<Map<String, Object>>(pageUtil.getTotalCount(), weeklylist);
	}

	@Override
	public DMTResultBean queryWeeklyDetail(HttpServletRequest request) throws Exception {
		DMTSessionBean admin = (DMTSessionBean) request.getSession().getAttribute("sessionBean");
		String rolename = admin.getRolename();
		String weeklystart = request.getParameter("weeklystart");
		String weeklyadmin = request.getParameter("weeklyadmin");
		Map<String, Object> params = new HashMap<String, Object>();
		if (notNull(weeklystart)) {
			weeklystart = weeklystart.replace("-", "");
			params.put("weeklystart", weeklystart);
		}
		if (notNull(weeklyadmin)) {
			params.put("weeklyadmin", weeklyadmin);
		}

		List<Map<String, Object>> weekly = weeklyMapper.QueryWeeklyDetail(params);
		WeeklyDetailsBean weeklyBean = new WeeklyDetailsBean();
		weeklyBean.setRolename(rolename);
		weeklyBean.setWeeklyadmin(weeklyadmin);
		if (weekly == null || weekly.size() == 0) {
			return new DMTResultBean("0", "", weeklyBean);
		} else {
			String timeStart = (String) weekly.get(0).get("weekly_start");
			String timeEnd = (String) weekly.get(0).get("weekly_end");
			String authadmin = (String) weekly.get(0).get("weekly_auth_admin");
			String lastdesc = (String) weekly.get(0).get("weekly_lastdesc");
			weeklyBean.setTimeStart(timeStart);
			weeklyBean.setTimeEnd(timeEnd);
			weeklyBean.setAuthAdmin(authadmin);
			weeklyBean.setLastDesc(lastdesc);
			String weeklyId = (String) weekly.get(0).get("weekly_id");

			List<Map<String, Object>> daily = dailyMapper.dailyQueryList(weeklyId);
			String[] dailyTime = new String[daily.size()];
			String[] dailyPart = new String[daily.size()];
			String[] dailyContent = new String[daily.size()];
			String[] dailyQuestion = new String[daily.size()];
			String[] dailyAnswer = new String[daily.size()];
			for (int i = 0; i < daily.size(); i++) {
				String dailytime = (String) daily.get(i).get("daily_time");
				if (dailytime != null || dailytime != "") {
					dailyTime[i] = DMTDateUtil.packDateShort(dailytime) + " " + (String) daily.get(i).get("daily_week");
				}
				dailyPart[i] = (String) daily.get(i).get("daily_part");
				dailyContent[i] = (String) daily.get(i).get("daily_content");
				dailyQuestion[i] = (String) daily.get(i).get("daily_question");
				dailyAnswer[i] = (String) daily.get(i).get("daily_answer");
			}
			weeklyBean.setDailyTime(dailyTime);
			weeklyBean.setDailyPart(dailyPart);
			weeklyBean.setDailyContent(dailyContent);
			weeklyBean.setDailyQuestion(dailyQuestion);
			weeklyBean.setDailyAnswer(dailyAnswer);

			// weeklyBean.setDailyList(dailyDetail);
			List<Map<String, Object>> nextPlan = nextPlanMapper.nextPlanQueryList(weeklyId);
			int[] no = new int[nextPlan.size()];
			String[] nextplanThing = new String[nextPlan.size()];
			String[] nextplanOvertime = new String[nextPlan.size()];
			String[] nextplanLeading = new String[nextPlan.size()];
			String[] nextplanPart = new String[nextPlan.size()];
			for (int i = 0; i < nextPlan.size(); i++) {
				no[i] = i + 1;
				nextplanThing[i] = (String) nextPlan.get(i).get("nextplan_thing");
				String nextTime = (String) nextPlan.get(i).get("nextplan_overtime");
				if (nextTime != null || nextTime != "") {
					nextplanOvertime[i] = DMTDateUtil.packDateShort(nextTime);
				}
				nextplanLeading[i] = (String) nextPlan.get(i).get("nextplan_leading");
				nextplanPart[i] = (String) nextPlan.get(i).get("nextplan_parting");
			}
			weeklyBean.setNo(no);
			weeklyBean.setNextplanThing(nextplanThing);
			weeklyBean.setNextplanOvertime(nextplanOvertime);
			weeklyBean.setNextplanLeading(nextplanLeading);
			weeklyBean.setNextplanPart(nextplanPart);
			return new DMTResultBean("0", "", weeklyBean);
		}
	}

	@Override
	public DMTResultBean weeklyReview(HttpServletRequest request) {
		DMTSessionBean userinfo = getSessionBean(request);
		String weeklyadmin = request.getParameter("weeklyadmin");
		String weeklystart = request.getParameter("weeklystart");
		Map<String, Object> params = new HashMap<String, Object>();
		if (notNull(weeklystart)) {
			weeklystart = weeklystart.replace("-", "");
			params.put("weeklystart", weeklystart);
		}
		if (notNull(weeklyadmin)) {
			params.put("weeklyadmin", weeklyadmin);
		}
		List<Map<String, Object>> weekly = weeklyMapper.QueryWeekly(params);
		TableWeekly tableWeekly = new TableWeekly();
		tableWeekly.setWeeklyId((String) weekly.get(0).get("weekly_id"));
		tableWeekly.setWeeklyAdminId((String) weekly.get(0).get("weekly_admin_id"));
		;
		tableWeekly.setWeeklyAuthAdmin((String) weekly.get(0).get("weekly_auth_admin"));
		tableWeekly.setWeeklyStart(weeklystart);
		tableWeekly.setWeeklyEnd((String) weekly.get(0).get("weekly_end"));
		tableWeekly.setWeeklyStatus("00");
		tableWeekly.setWeeklyLastdesc((String) weekly.get(0).get("weekly_lastdesc"));
		tableWeeklyMapper.updateByPrimaryKeySelective(tableWeekly);
		log.logging("修改周报状态", this.getClass(), userinfo.getUsername(), userinfo.getIp());
		return null;
	}

	@Override
	public DMTResultBean saveWeekly(HttpServletRequest request) {
		DMTSessionBean admin = (DMTSessionBean) request.getSession().getAttribute("sessionBean");
		String weeklyadminid = admin.getAdminid();
		String weeklyid = DMTPrimaryKeyUtil.getPrimaryKey("");
		String weeklyauthadmin = request.getParameter("authadmin");
		String weeklyStart = request.getParameter("weeklystart");
		String weeklystart = weeklyStart.replace("-", "");
		String weeklyEnd = request.getParameter("weeklyend");
		String weeklyend = weeklyEnd.replace("-", "");
		String weeklystatus = "01";
		String weeklylastdesc = request.getParameter("lastdesc");
		String dailytime = request.getParameter("dailytime");
		String[] dailytimes =dailytime.split(",");
		String dailypart = request.getParameter("dailypart");
		String[] dailyparts = dailypart.split("\\*");
		String dailycontent = request.getParameter("dailycontent");
		String[] dailycontents = dailycontent.split("\\*");
		String dailyquestion = request.getParameter("dailyquestion");
		String[] dailyquestions = dailyquestion.split("\\*");
		String dailyanswer = request.getParameter("dailyanswer");
		String[] dailyanswers = dailyanswer.split("\\*");
		
		// 下周计划
		// 下周事情
		String nextplanthing = request.getParameter("nextplanthing");
		String[] nextplanthings = nextplanthing.split("SPLIT");
		// 计划完成时间
		String nextplanovertime = request.getParameter("nextplanovertime");
		String[] nextplanovertimes = nextplanovertime.split("SPLIT");
		// 负责任
		String nextplanleading = request.getParameter("nextplanleading");
		String[] nextplanleadings = nextplanleading.split("SPLIT");
		// 参与人
		String nextplanparting = request.getParameter("nextplanparting");
		String[] nextplanpartings = nextplanparting.split("SPLIT");
		// 下周计划条数
		String planCount = request.getParameter("planCount");
		
		TableWeekly tableWeekly = new TableWeekly();
		tableWeekly.setWeeklyId(weeklyid);
		tableWeekly.setWeeklyAdminId(weeklyadminid);
		if (notNull(weeklyauthadmin)) {
			tableWeekly.setWeeklyAuthAdmin(weeklyauthadmin);
		} else {
			//return new DMTResultBean("1", "审阅人不能为空", "审阅人不能为空");
		}
		if (notNull(weeklystart)) {
			tableWeekly.setWeeklyStart(weeklystart);
		} else {
			return new DMTResultBean("1", "周报时间不能为空", "周报时间不能为空");
		}
		if (notNull(weeklyend)) {
			tableWeekly.setWeeklyEnd(weeklyend);
		} else {
			return new DMTResultBean("1", "周报时间不能为空", "周报时间不能为空");
		}
		if (notNull(weeklystatus)) {
			tableWeekly.setWeeklyStatus(weeklystatus);
		} else {
			return new DMTResultBean("1", "周报状态不能为空", "周报状态不能为空");
		}
		tableWeekly.setWeeklyLastdesc(weeklylastdesc);
		
		TableWeeklyExample selectExample = new TableWeeklyExample();
		selectExample.createCriteria().andWeeklyStartEqualTo(weeklystart);
		List<TableWeekly> tableWeeklyList = tableWeeklyMapper.selectByExample(selectExample);
		if(null!= tableWeeklyList && tableWeeklyList.size()>0){
			weeklyid =tableWeeklyList.get(0).getWeeklyId(); 
			tableWeekly.setWeeklyId(weeklyid);
			tableWeeklyMapper.updateByPrimaryKeySelective(tableWeekly);
			// 删除周报下的所有日报
			TableDailyExample tableDailyExample = new TableDailyExample();
			tableDailyExample.createCriteria().andDailyWeeklyIdEqualTo(weeklyid);
			tableDailyMapper.deleteByExample(tableDailyExample);
			// 更新日报
			if (dailyparts.length > 0) {
				TableDaily tableDaily = new TableDaily();
				for (int j = 0; j < dailyparts.length; j++) {
					tableDaily.setDailyId(DMTPrimaryKeyUtil.getPrimaryKey(""));
					tableDaily.setDailyWeeklyId(weeklyid);
					tableDaily.setDailyTime(dailytimes[j].split(" ")[0]);
					tableDaily.setDailyWeek(dailytimes[j].split(" ")[1]);
					tableDaily.setDailyPart("@#@".equals(dailyparts[j]) ? "" : dailyparts[j]);
					tableDaily.setDailyContent("@#@".equals(dailycontents[j]) ? "" : dailycontents[j]);
					tableDaily.setDailyQuestion("@#@".equals(dailyquestions[j]) ? "" : dailyquestions[j]);
					tableDaily.setDailyAnswer("@#@".equals(dailyanswers[j]) ? "" : dailyanswers[j]);
					tableDaily.setDailyCommittime(DMTDateUtil.parseDate());
					int insertSelective = tableDailyMapper.insertSelective(tableDaily);
					if (insertSelective == 0) {
						return new DMTResultBean("1", "失败", dailytimes[j].split(" ")[0] + " 日报提交失败");
					}
				}
			}
			// 更新下周计划
			TableNextplanExample tableNextplanExample = new TableNextplanExample();
			tableNextplanExample.createCriteria().andNextplanWeeklyIdEqualTo(weeklyid);
			// 删除下周计划
			tableNextplanMapper.deleteByExample(tableNextplanExample);
			TableNextplan tableNextplan = new TableNextplan();
			for (int i = 0; i < Integer.parseInt(planCount); i++) {
				tableNextplan.setNextplanId(DMTPrimaryKeyUtil.getPrimaryKey(""));
				tableNextplan.setNextplanThing(nextplanthings[i + 1].equals("@#@") ? "" : nextplanthings[i + 1]);
				tableNextplan.setNextplanOvertime(nextplanovertimes[i + 1].equals("@#@") ? "" : nextplanovertimes[i + 1]);
				tableNextplan.setNextplanLeading(nextplanleadings[i + 1].equals("@#@") ? "" : nextplanleadings[i + 1]);
				tableNextplan.setNextplanParting(nextplanpartings[i + 1].equals("@#@") ? "" : nextplanpartings[i + 1]);
				tableNextplan.setNextplanWeeklyId(weeklyid);
				int insertSelective = tableNextplanMapper.insertSelective(tableNextplan);
				if (insertSelective == 0) {
					return new DMTResultBean("1", "失败", "下周计划提交失败");
				}
			}
		}else{
			int count = tableWeeklyMapper.insertSelective(tableWeekly);
			if (count > 0) {
				// 存储日报
				if (dailyparts.length > 0) {
					TableDaily tableDaily = new TableDaily();
					for (int j = 0; j < dailyparts.length; j++) {
						tableDaily.setDailyId(DMTPrimaryKeyUtil.getPrimaryKey(""));
						tableDaily.setDailyWeeklyId(weeklyid);
						tableDaily.setDailyTime(dailytimes[j].split(" ")[0]);
						tableDaily.setDailyWeek(dailytimes[j].split(" ")[1]);
						tableDaily.setDailyPart("@#@".equals(dailyparts[j]) ? "" : dailyparts[j]);
						tableDaily.setDailyContent("@#@".equals(dailycontents[j]) ? "" : dailycontents[j]);
						tableDaily.setDailyQuestion("@#@".equals(dailyquestions[j]) ? "" : dailyquestions[j]);
						tableDaily.setDailyAnswer("@#@".equals(dailyanswers[j]) ? "" : dailyanswers[j]);
						tableDaily.setDailyCommittime(DMTDateUtil.parseDate());
						int insertSelective = tableDailyMapper.insertSelective(tableDaily);
						if (insertSelective == 0) {
							return new DMTResultBean("1", "失败", dailytimes[j].split(" ")[0] + " 日报提交失败");
						}
					}
				}
				// 存储下周工作计划
				TableNextplan tableNextplan = new TableNextplan();
				for (int i = 0; i < Integer.parseInt(planCount); i++) {
					tableNextplan.setNextplanId(DMTPrimaryKeyUtil.getPrimaryKey(""));
					tableNextplan.setNextplanThing(nextplanthings[i + 1].equals("@#@") ? "" : nextplanthings[i + 1]);
					tableNextplan.setNextplanOvertime(nextplanovertimes[i + 1].equals("@#@") ? "" : nextplanovertimes[i + 1]);
					tableNextplan.setNextplanLeading(nextplanleadings[i + 1].equals("@#@") ? "" : nextplanleadings[i + 1]);
					tableNextplan.setNextplanParting(nextplanpartings[i + 1].equals("@#@") ? "" : nextplanpartings[i + 1]);
					tableNextplan.setNextplanWeeklyId(weeklyid);
					int insertSelective = tableNextplanMapper.insertSelective(tableNextplan);
					if (insertSelective == 0) {
						return new DMTResultBean("1", "失败", "下周计划提交失败");
					}
				}
			} else {
				return new DMTResultBean("1", "失败", "周报提交失败");
			}
		}
		return new DMTResultBean("0", "成功", "周报提交成功");
	}

}
