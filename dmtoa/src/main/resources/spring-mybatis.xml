<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd	
                        http://www.springframework.org/schema/tx	
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd	  
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">  
    <!-- 自动扫描拦截器注解 -->  
    <context:component-scan base-package="com.bjdreamtech" />  
    <!-- 引入数据库连接配置文件 -->  
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:config.properties" />  
    </bean> 
  	
  	<!-- 配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"  
        destroy-method="close">  
        <property name="driverClassName" value="${db.driver}" />  
        <property name="url" value="${db.url}" />  
        <property name="username" value="${db.username}" />  
        <property name="password" value="${db.password}" />  
        <!-- 初始化连接大小 -->  
        <property name="initialSize" value="${db.initialSize}"></property>  
        <!-- 连接池最大数量 -->  
        <property name="maxActive" value="${db.maxActive}"></property>  
        <!-- 连接池最大空闲 -->  
        <property name="maxIdle" value="${db.maxIdle}"></property>  
        <!-- 连接池最小空闲 -->  
        <property name="minIdle" value="${db.minIdle}"></property>  
        <!-- 获取连接最大等待时间 -->  
        <property name="maxWait" value="${db.maxWait}"></property> 
         <!--验证SQL--> 
       <!--  <property name="validationQuery" value="select 1"></property>
        指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
        <property name="testWhileIdle" value="true"></property>
        每5分钟行一次空闲连接回收器  
        <property name="timeBetweenEvictionRunsMillis" value="300000"></property>
         池中的连接空闲30分钟后被回收  
        <property name="minEvictableIdleTimeMillis" value="18000000"></property>
        获取连接时不要测试，否则很影响性能  
        <property name="testOnBorrow" value="true"></property>   -->
    </bean> 
  
    <!-- spring和MyBatis整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
    	<!-- 配置数据源 -->
        <property name="dataSource" ref="dataSource" />  
        <!-- 配置mybatis配置文件，拦截器使用 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations">
			<list>
				<value>classpath:mapping/auto/*.xml</value>
				<value>classpath:mapping/custom/*.xml</value>
			</list>
		</property> 
    </bean>  
  
    <!-- 持久层接口所在包名，Spring会自动查找其下的类，将其定义成bean -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.bjdreamtech.mapper.auto,com.bjdreamtech.mapper.custom" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
  	<tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
    
  
</beans>  